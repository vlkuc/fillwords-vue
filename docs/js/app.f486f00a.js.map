{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?2fd8","webpack:///./src/App.vue","webpack:///./src/wordsBase.js","webpack:///./src/patterns.js","webpack:///./src/generator.js","webpack:///./src/App.vue?8ecf","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","gameStart","map","row","index","item","jindex","switchSelectMode","letter","enterString","style","color","wordOutPattern","gameWin","width","gameRestart","wordsBase","patterns","getFlipPattern","pattern","rawPattern","Math","floor","random","patCase","forEach","word","patternWord","symbol","getFlipNoSquarePattern","shortside","tallside","fallOnSide","temp","getSixPattern","getSevenPattern","getEightPattern","getNinePattern","getTenPattern","getPattern","makeMapAndPattern","wordRev","unshift","wordLenghtInBase","wordFromBase","dead","selectStart","wordsSolved","colorOfSelect","vocabulary","selectedCells","selectedSymbols","methods","this","stopSelect","startSelect","createColor","flag","checkVocabulary","includes","clearMap","find","el","abs","red","green","blue","toString","allElementsEqual","watch","__exports__","render","createApp","App","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,sGCvJT,W,gHCCE,eAEM,OAFDyC,MAAM,UAAQ,U,SAMjBA,MAAM,O,gCAoBHA,MAAM,qB,SACJA,MAAM,gB,SAIPA,MAAM,gB,SAMNA,MAAM,gB,SAMNA,MAAM,gB,GAMLA,MAAM,wB,eAgBNA,MAAM,kB,4EAjEb,EAKQ,EAAAC,W,iBADR,eAoBM,MApBN,EAoBM,E,mBAhBJ,eAeM,2BAdmB,EAAAC,KAAG,SAAlBC,EAAKC,G,wBADf,eAeM,OAbHd,IAAKc,EACNJ,MAAM,W,qBAEN,eASM,2BARqBG,GAAG,SAApBE,EAAMC,G,wBADhB,eASM,OAPHhB,IAAKgB,EACL,QAAK,mBAAE,EAAAC,iBAAiBH,EAAOE,EAAQD,EAAKG,SAC5C,aAAU,mBAAE,EAAAC,YAAYL,EAAOE,EAAQD,EAAKG,SAC7CR,MAAM,WACLU,MAAK,6BAAkBL,EAAKM,Q,eAE3BN,EAAKG,QAAM,S,0CAKnB,eAwDM,MAxDN,EAwDM,EAtDK,EAAAP,WAAa,EAAAW,gBAAkB,EAAAC,S,iBADxC,eAqBM,MArBN,EAqBM,CAhBK,EAAAZ,U,wCAFT,eAKI,IALJ,EAGC,4BAKO,EAAAW,gB,iBAFR,eAKI,IALJ,EAGC,0D,sBAKO,EAAAC,S,iBAFR,eAKI,IALJ,EAGC,mB,+CAIH,eAcM,MAdN,EAcM,CAZI,EAAAA,UAAY,EAAAZ,U,iCADpB,eAYS,U,2DAVE,EAAAa,MAAK,IACdd,MAAM,gB,mBAEN,eAMS,2BALO,GAAC,SAAVI,G,OADP,eAMS,UAJRd,IAAKc,EACLpB,MAAOoB,EAAK,G,eAEPA,EAAK,OAASA,EAAK,Y,qBARhB,EAAAU,S,wBAab,eAgBM,MAhBN,EAgBM,CAdK,EAAAD,Q,wCADT,eAMS,U,MAJPb,MAAM,SACL,QAAK,+BAAE,EAAAC,WAAa,EAAAA,a,eAElB,EAAAA,UAAS,oCAIN,EAAAY,S,iBADR,eAMS,U,MAJPb,MAAM,SACL,QAAK,+BAAE,EAAAe,iBACT,iB,+FC/EMC,EAAY,CACrB,CACI,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAGnE,CACI,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAG5E,CACI,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACjF,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACjF,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACjF,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACjF,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAGrF,CACI,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC1F,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC1F,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC1F,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC1F,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9F,CACI,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGvG,CACI,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,YAGpD,CACI,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,YACpD,YAAa,YAAa,YAAa,YAAa,cChE/CC,EAAW,CACpB,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzB,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzB,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjC,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjC,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAG7E,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzC,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzC,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGrE,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAG7E,MAAM,CACF,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzC,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGrE,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGrE,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAG7D,MAAM,CACF,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7D,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7D,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrE,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAG7E,MAAO,CACH,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEjE,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEzD,CACI,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrD,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,E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","file":"js/app.f486f00a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=de0e8a76&lang=css\"","<template>\n  <div class=\"logo-w\">\n\n  </div>\n\n  <div \n    v-if=\"gameStart\"\n    class=\"map\"\n  >\n    <div \n      v-for=\"(row, index) in map\" \n      :key=\"index\"\n      class=\"map-row\"\n    >\n      <div \n        v-for=\"(item, jindex) in row\" \n        :key=\"jindex\"\n        @click=\"switchSelectMode(index, jindex, item.letter)\"\n        @mouseenter=\"enterString(index, jindex, item.letter)\"\n        class=\"map-item\"\n        :style='\"background:\" + item.color'\n      >\n        {{item.letter}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"interface-wrapper\">\n    <div class=\"info-message\"\n      v-if=\"!gameStart || wordOutPattern || gameWin\"\n    >\n      <p \n        class=\"word-message\"\n        v-if=\"!gameStart\"\n      >\n        Выберите ширину поля:\n      </p>\n      <p \n        class=\"word-message\"\n        v-if=\"wordOutPattern\"\n      >\n        Круто! Вы нашли слово, не предусмотренное шаблоном.\n      </p>\n      <p \n        class=\"word-message\"\n        v-if=\"gameWin\"\n      >\n        Вы выиграли!\n      </p>\n    </div>\n    <div class=\"select-width-wrapper\">\n      <select\n        v-if=\"gameWin || !gameStart\"\n        v-model=\"width\"\n        class=\"select-width\"\n      >\n        <option\n        v-for=\"index in 8\"\n        :key=\"index\"\n        :value=\"index+2\"\n        >\n          {{ (index+2)+'x'+(index+2) }}\n        </option>\n      </select>\n    </div>\n    \n    <div class=\"button-wrapper\">\n      <button\n        v-if=\"!gameWin\" \n        class=\"button\"\n        @click=\"gameStart = !gameStart\"\n      >\n        {{!gameStart ? 'Начать игру' : 'Закончить игру' }}\n      </button>\n      \n      <button\n        v-if=\"gameWin\" \n        class=\"button\"\n        @click=\"gameRestart()\"\n      >\n        Новая игра\n      </button>\n    </div>\n  </div>\n  \n  \n</template>\n\n<script>\n\nimport { makeMapAndPattern } from './generator'\nimport { wordsBase } from './wordsBase'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      gameStart: false,\n      gameWin: false,\n      selectStart: false,\n      wordOutPattern: false,\n      wordsSolved: 0,\n      width: 3,\n      colorOfSelect: '#FFF',\n      map: [],\n      vocabulary: [],\n      selectedCells: [],\n      selectedSymbols: '',\n    }\n  },\n\n  methods : {\n    switchSelectMode(i, j, symbol){\n      if(!this.selectStart){\n        if (!this.map[i][j].dead){\n          this.startSelect(i, j, symbol);\n        }\n      } else {\n         this.stopSelect();\n      }\n    },\n\n    startSelect(i, j, symbol){\n      // Обнуляем выделенные клетки и символы.\n      this.selectedCells = [];\n      this.selectedSymbols = [];\n      \n      // Заносим туда клетку, с которой начинается выделение.\n      this.selectedCells.push([i,j]);\n      this.selectedSymbols = this.selectedSymbols + symbol;\n      \n      // Назначаем цвет выделения и красим клетку.\n      this.colorOfSelect = this.createColor();\n      this.map[i][j].color = this.colorOfSelect;\n      \n      // Включаем режим выделения.\n      this.selectStart = true;\n      \n      // Сбрасываем флаг, отвечающий за нахождения слова, не принадлежащее шаблону, но находящееся в базе. \n      this.wordOutPattern = false;\n    },\n\n    stopSelect(){\n        // Относится ли введенное слово к решению?\n        let flag = this.checkVocabulary();\n\n        // Проверяем, есть ли введенное слово в базе, и является ли оно частью решения (шаблона). \n        this.wordOutPattern = \n        wordsBase[this.selectedSymbols.length - 3]\n        ? wordsBase[this.selectedSymbols.length - 3].includes(this.selectedSymbols) && !flag\n        : false;\n        \n        // Чистим карту, если флаг ложный, \"убиваем\" выделенные клетки, если флаг истинный.\n        this.clearMap(flag);\n\n        // Повышаем количество решенных слов и проверяем, не победил ли игрок.\n        if(flag){\n          this.wordsSolved++;\n          if(this.wordsSolved === this.vocabulary.length){\n            this.gameWin = true;\n          }\n        }\n        \n        // Сбрасываем выделенные клетки, символы и режим выделения\n        this.selectedCells = [];\n        this.selectedSymbols = '';\n        this.selectStart = false;\n    },\n\n    clearMap(flag){\n      this.selectedCells.forEach(item => {\n        if (flag) {\n          this.map[item[0]][item[1]].dead = true;\n        } else {\n          this.map[item[0]][item[1]].color = '#fff';\n        }\n      });\n    },\n\n    enterString(i, j, symbol){\n      if (\n      // Проверяем включено ли выделение.\n      this.selectStart\n      // Проверяем, не выделял ли игрок эту клетку ранее.\n      && !this.selectedCells.find(el => el[0] == i && el[1] == j) \n      // Проверяем, что клетка не \"выбыла\" из игры.\n      && !this.map[i][j].dead){\n        // Проверка на то, что игрок \"переходит\" только на смежные клетки.\n        if((Math.abs(this.selectedCells[this.selectedCells.length - 1][0] - i) === 1 &&\n          Math.abs(this.selectedCells[this.selectedCells.length - 1][1] - j) === 0) ||\n          (Math.abs(this.selectedCells[this.selectedCells.length - 1][0] - i) === 0 &&\n          Math.abs(this.selectedCells[this.selectedCells.length - 1][1] - j) === 1)){\n            this.selectedCells.push([i,j]);\n            this.selectedSymbols = this.selectedSymbols + symbol;\n            this.map[i][j].color = this.colorOfSelect;\n        } else {\n          // Если игрок сходил не на смежную клетку, выключаем выделение переключением режима\n          this.switchSelectMode(\n            this.selectedCells[this.selectedCells.length-1][0],\n            this.selectedCells[this.selectedCells.length-1][1], ''\n          );\n        }\n      }\n    },\n\n    // Функция для создания случайного цвета в #HEX формате.\n    createColor(){\n      let red = Math.floor(Math.random()*100);\n      red = red + 150;\n\n      let green = Math.floor(Math.random()*100);\n      green = green + 150;\n\n      let blue = Math.floor(Math.random()*100);\n      blue = blue + 150;\n\n      let color = '#' + red.toString(16) + green.toString(16) + blue.toString(16);\n      \n      return color;\n    },\n    \n    // Функция проверяет, являются ли выделенные клетки словом, входящим в решение. \n    checkVocabulary(){\n      let flag = false;\n      for(let i = 0; i < this.vocabulary.length; i++){\n        if (this.vocabulary[i].length === this.selectedCells.length){\n          let allElementsEqual = true;\n\n          for(let j = 0; j < this.vocabulary[i].length; j++){\n            if (this.vocabulary[i][j][0] !== this.selectedCells[j][0] \n            || this.vocabulary[i][j][1] !== this.selectedCells[j][1])\n              allElementsEqual = false;\n          }\n\n          if (allElementsEqual){\n            flag = true;\n            break;\n          }\n        }\n      }\n      return flag;\n    },\n\n    gameRestart(){\n      const {map, pattern} = makeMapAndPattern(this.width);\n      this.map = map;\n      this.vocabulary = pattern; \n\n      this.gameWin = false;\n      this.wordsSolved = 0;\n    }\n  },\n  watch : {\n    gameStart() {\n      this.gameStart ? this.gameRestart() : '';\n    }\n  }\n}\n</script>\n\n<style>\n*{\n  margin: 0;\n  padding: 0;\n}\n\n.map{\n  background: black;\n  border: 2px solid black;\n  width: fit-content;\n\n  margin: 40px auto 0;\n}\n\n.map-row{\n  display: flex;\n  flex-direction: row;\n}\n\n.map-item{\n  border: 2px solid black;\n  font-size: 24px;\n  font-family: sans-serif;\n\n  width: 40px;\n  height: 40px;\n  text-align: center;\n\n  box-sizing: border-box;\n  padding: 5px;\n\n  background: rgb(250, 237, 219);\n\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none;   /* Chrome/Safari/Opera */\n  -khtml-user-select: none;    /* Konqueror */\n  -moz-user-select: none;      /* Firefox */\n  -ms-user-select: none;       /* Internet Explorer/Edge */\n  user-select: none;           /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n\n.interface-wrapper{\n  margin: 20px 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 20px;\n  font-family: sans-serif;\n}\n\n.info-message{\n  padding: 10px 20px;\n  background: rgba(199, 238, 192, 0.534);\n  border: 3px solid rgb(6, 52, 138);\n\n  max-width: 300px;\n  text-align: center;\n}\n\n.button-wrapper{\n  margin-top: 10px;\n  width: fit-content;\n}\n\n.button{\n  border: 3px solid rgb(6, 52, 138);\n  background: rgba(199, 238, 192, 0.534);\n\n  padding: 8px 10px;\n\n  font-size: 20px;\n  line-height: 20px;\n}\n\n.select-width-wrapper{\n  margin-top: 10px;\n  width: fit-content;\n}\n.select-width{\n  background: #fff;\n  box-sizing: border-box;\n  border: 3px solid rgb(6, 52, 138);\n\n  padding: 8px 10px 8px 23px;\n\n  font-size: 20px;\n  line-height: 20px;\n  font-family: sans-serif;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n.select-width::-ms-expand { \n  display: none; \n} \n.select-width:hover { \n  border-color: rgb(185, 185, 185); \n} \n.select-width:focus {\n  outline: none; \n} \n\n</style>\n","export const wordsBase = [\n    [\n        'КОТ', 'ДОМ', 'ЛЕС', 'СОН', 'ЛУК', 'РОГ', 'ЛИС', 'ЯМА', 'ШУМ', 'ЯМБ',\n        'БОР', 'МОР', 'УХО', 'СУП', 'ГИД', 'ВЕК', 'ВЕС', 'РЁВ', 'ОДА', 'ЖИР',\n        'ВАЛ', 'ШИК', 'ПЕС', 'РЫК', 'ЛЕВ', 'ДАР', 'ЖАР', 'БОБ', 'БАР', 'БОГ',\n        'ДУШ', 'ЗОВ', 'ГОЛ', 'БАЛ', 'БЕГ', 'БЕС', 'СЫР', 'ВЯЗ', 'ГОД', 'ЕЛЬ',\n        'ЗУБ', 'ЛЁД', 'ЛУГ', 'МАЙ', 'МАК', 'МЯЧ', 'МУЖ', 'МЫС', 'МЁД', 'ПАС',\n    ], \n    \n    [\n        'МЫШЬ', 'ТЕСТ', 'ПЛЕН', 'ШАРФ', 'НУГА', 'ВУДУ', 'ФОТО', 'БИТА', 'ПРИЗ', 'СИТО',\n        'УРНА', 'ХАОС', 'ЭФЕС', 'БОБР', 'ХРЕН', 'ВОЛЯ', 'КИНО', 'ВОДА', 'ПЫЛЬ', 'ЯХТА',\n        'КЛЕЙ', 'МОРС', 'ИРИС', 'ХЛАМ', 'АРФА', 'БЛЕФ', 'БЛИК', 'ГНОМ', 'ГЕРБ', 'ДРОН',\n        'ДЫНЯ', 'ЗАЯЦ', 'ЖЮРИ', 'КОМА', 'КОРЖ', 'МЕДЬ', 'ПИРС', 'МЕРА', 'ПОЭТ', 'ПРУД',\n        'ПУЛЯ', 'СОНЯ', 'СЕЛЬ', 'ХЛЕВ', 'ШЛЕМ', 'ЮРТА', 'ЮБКА', 'ЯДРО', 'ЧУДО', 'ШИЛО'\n    ], \n    \n    [\n        'ГЕНИЙ', 'СУКНО', 'СИНЯК', 'ПОСЫЛ', 'ПЕНИЕ', 'ФРАЗА', 'ЗАДОР', 'ЗАБОР', 'КОБРА', 'ВОЖДЬ',\n        'КАЗАН', 'ЛАЙКА', 'КУРОК', 'МЫТЬЁ', 'СКВЕР', 'БИНОМ', 'ГАМАК', 'АМБАР', 'САРАЙ', 'МОДУС',\n        'НЮАНС', 'ПАРУС', 'АФИША', 'БАРИН', 'ВАЛУН', 'ГУБКА', 'ДАМБА', 'ЖЕНИХ', 'ЖУЛИК', 'ЗВЕРЬ',\n        'ИСПУГ', 'КАДЕТ', 'ЛОТОС', 'МЕДИК', 'НАВЕС', 'ОБУЗА', 'ПЕСЕЦ', 'РАНЕЦ', 'САПЁР', 'ТЕПЛО',\n        'УКСУС', 'ФИНИШ', 'ХОЛСТ', 'ХОМУТ', 'ЧАСТЬ', 'ШОРОХ', 'ШЛАНГ', 'ЮРИСТ', 'ЯБЕДА', 'ШПРИЦ'\n    ], \n    \n    [\n        'ДЕРЕВО', 'ГЕРАНЬ', 'ГРАЦИЯ', 'КАРДОН', 'БАННЕР', 'ГЛЮТЕН', 'КЛЯКСА', 'ЛЕКТОР', 'МЕЧНИК', 'ЩЁЛОЧЬ',\n        'РЕЛЬЕФ', 'СБОРКА', 'ВИДЖЕТ', 'ГОНЧАР', 'СТОЛЯР', 'МОРФИЙ', 'ХОККЕЙ', 'БАНДИТ', 'ВНУЧКА', 'ДВЕРЦА',\n        'АНАНАС', 'БИЗНЕС', 'ВАНТУЗ', 'ГЕРЦОГ', 'ДЕСАНТ', 'ЕХИДНА', 'ЗАБОТА', 'ЗАНУДА', 'ИНДЕЕЦ', 'КАШЕЛЬ', \n        'ЛЁТЧИК', 'МАНГАЛ', 'МУСКАТ', 'НЕФРИТ', 'ОТПУСК', 'ПАСЛЁН', 'ПЕЙЗАЖ', 'РОЗЖИГ', 'СИНТЕЗ', 'СОЛИСТ', \n        'ТЕЛЕГА', 'УНИСОН', 'ФИЗИКА', 'ЦВЕТОК', 'ЧЕРТЁЖ', 'ЧЕСНОК', 'ШАЛФЕЙ', 'ЩЁЛОЧЬ', 'ЭМОЦИЯ', 'ЭПОТАЖ'\n    ],\n    \n    [\n        'ВАКЦИНА', 'ГИГИЕНА', 'ВКЛАДЫШ', 'ДЕВОЧКА', 'БИАТЛОН', 'ПРОСТОЙ', 'ТАЁЖНИК', 'ПРОТЕИН', 'СЛЕПЕНЬ', 'ПОРОШОК',\n        'ПЛОТИНА', 'РАЗБРОС', 'ПОДЛИЗА', 'ТРИПЛЕТ', 'ОТМЫЧКА', 'ПРИХВАТ', 'ПАРТНЁР', 'ОТМЕТКА', 'АЛЬПАКА', 'БИОГРАФ', \n        'ВЕРШИНА', 'ВОДОЛЕЙ', 'ГОЛОЛЁД', 'ДИВИЗИЯ', 'ЁМКОСТЬ', 'ЗАКОЛКА', 'ЗАТЯЖКА', 'ИСПАНЕЦ', 'КАДАСТР', 'КОПАНИЕ', \n        'ЛАЗАРЕТ', 'ЛЕКСЕМА', 'МИНОМЁТ', 'НЕДОСЫП', 'НЕЯСЫТЬ', 'НОУТБУК', 'НОКТЮРН', 'ПРИЗРАК', 'РОДСТВО', 'СОБЛАЗН', \n        'СОВЕСТЬ', 'СПРАВКА', 'УЗДЕЧКА', 'УЧЕБНИК', 'УРОВЕНЬ', 'ФРАКЦИЯ', 'ЧЕРНИКА', 'ЧУВСТВО', 'ЩЕБЁНКА', 'ЭКСПЕРТ'\n    ], \n    \n    [\n        'КОВЕНАНТ', 'РАКЕТЧИК', 'ХАРАКТЕР', 'РАСЧЕСКА', 'КИСЛОРОД',\n        'МЕГАБАЙТ', 'ГИГАБАЙТ', 'КИЛОБАЙТ', 'ПРОМАШКА', 'РАСТЕНИЕ',\n        'ПРЕЕМНИК', 'ПОДКИДЫШ', 'ЧИХУАХУА', 'ЕВКАЛИПТ', 'БАРЕЛЬЕФ', \n        'ВОЛНОРЕЗ', 'АЛГОРИТМ', 'ЛОГОРИФМ', 'АМБРОЗИЯ', 'БОРЩЕВИК', \n        'ВАКАНСИЯ', 'ВОЛОНТЁР', 'ВСКРЫТИЕ', 'ДРОВОСЕК', 'ЕСТЕСТВО', \n        'ЕХИДСТВО', 'ЖУРЧАНИЕ', 'ЗАКВАСКА', 'ИНСТИНКТ', 'КАРУСЕЛЬ', \n        'КВАРТИРА', 'КОСТОЧКА', 'КРЕВЕТКА', 'ЛУКОВИЦА', 'МЕДИАТОР', \n        'НАСМЕШКА', 'НОТАРИУС', 'НОЧЛЕЖКА', 'ПАЦИФИЗМ', 'ПОВАДЫРЬ', \n        'ПРИЁМНИК', 'ПРЕССИНГ', 'РАДИАТОР', 'РУКАВИЦА', 'САМОЦВЕТ', \n        'СОМНЕНИЕ', 'ТРУБАДУР', 'УПОРСТВО', 'УЧАСТНИК', 'ФИНАЛИСТ'\n    ],\n    \n    [\n        'МОДЕРАТОР', 'ДУНОВЕНИЕ', 'ПЕРЕПАЛКА', 'АУДИТОРИЯ', 'ВАГОНЕТКА',\n        'НЕДОПЛАТА', 'МЕДВЕДИЦА', 'ПРЕДАТЕЛЬ', 'ХРОМОСОМА', 'ПРОЦЕССИЯ', \n        'СУББОТНИК', 'ЭНЕРГЕТИК', 'ИНФУЗОРИЯ', 'ПОИСКОВИК', 'РУКОДЕЛИЕ', \n        'ФАРМАЦЕВТ', 'АКСОЛОТЛЬ', 'БЕЗМОЛВИЕ', 'БЕСЧЕСТЬЕ', 'ВИНОВНИЦА', \n        'ГИДРОГЕЛЬ', 'ГЛУШИТЕЛЬ', 'ДЕКОРАЦИЯ', 'ДЕНДРАРИЙ', 'ДИПЛОМАНТ', \n        'ДРАМАТУРГ', 'ЖИВОПИСЕЦ', 'ЖУРНАЛИСТ', 'ЗАТВОРНИК', 'ИГРОМАНИЯ', \n        'ИЗЛОЖЕНИЕ', 'ИЗВЕСТНЯК', 'ИССУШЕНИЕ', 'КАЛЛИГРАФ', 'КАРТОФЕЛЬ', \n        'КОЛЕБАНИЕ', 'КОМПАНЬОН', 'КОНТРОЛЁР', 'КРАЙНОСТЬ', 'МОДЕРАЦИЯ', \n        'НАВИГАЦИЯ', 'НЕВИДИМКА', 'ПАЛЕОЗАВР', 'ПОВСТАНЕЦ', 'ПОРУЧЕНИЕ', \n        'ПОТОМСТВО', 'ПРОЖЕКТОР', 'УСТАЛОСТЬ', 'ФЕСТИВАЛЬ', 'ЭКСТЕРЬЕР'\n    ] \n]","export const patterns = {\n    '3x3': [ \n        [\n            [[0, 0], [1, 0], [1, 1]],\n            [[0, 1], [0, 2], [1, 2]],\n            [[2, 0], [2, 1], [2, 2]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2]],\n            [[1, 0], [1, 1], [1, 2]],\n            [[2, 0], [2, 1], [2, 2]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2], [1, 2], [2, 2]],\n            [[1, 0], [2, 0], [2, 1], [1, 1]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2], [1, 2], [1, 1]],\n            [[1, 0], [2, 0], [2, 1], [2, 2]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0]],\n            [[0, 1], [0, 2], [1, 2], [1, 1], [2, 1], [2, 2]]\n        ],\n        [\n            [[2, 0], [1, 0], [1, 1]],\n            [[0, 0], [0, 1], [0, 2], [1, 2], [2, 2], [2, 1]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2], [1, 2], [1, 1], [1, 0], [2, 0], [2, 1], [2, 2]]\n        ],\n    ],\n    '3x4': [\n        [\n            [[1, 0], [2, 0], [2, 1], [2, 2], [2, 3]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [1, 2], [1, 1]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2]],\n            [[1, 0], [2, 0], [2, 1], [1, 1]],\n            [[0, 3], [1, 3], [2, 3], [2, 2], [1, 2]]\n        ],\n        [\n            [[1, 2], [1, 1], [1, 0], [2, 0], [2, 1]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [2, 2]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0]],\n            [[1, 1], [2, 1], [2, 2], [2, 3]],\n            [[0, 1], [0, 2], [0, 3], [1, 3], [1, 2]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0], [2, 1], [1, 1], [1, 2]],\n            [[0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [2, 2]]\n        ],\n        [\n            [[0, 1], [0, 2], [0, 3], [1, 3], [2, 3]],\n            [[0, 0], [1, 0], [2, 0], [2, 1], [2, 2], [1, 2], [1, 1]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0], [2, 1], [1, 1], [0, 1]],\n            [[2, 2], [1, 2], [0, 2], [0, 3], [1, 3], [2, 3]],\n        ],\n        [\n            [[0, 3], [1, 3], [1, 2], [1, 1]],\n            [[0, 2], [0, 1], [0, 1], [1, 0], [2, 0], [2, 1], [2, 2], [2, 3]]\n        ]\n    ],\n    '3x5': [\n        [\n            [[1, 1], [1, 2], [1, 3]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4]],\n            [[1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4]],\n        ],\n        [\n            [[1, 3], [1, 2], [1, 1], [1, 0], [2, 0], [2, 1]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [2, 3], [2, 2]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0]],\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4]],\n            [[1, 3], [1, 2], [1, 1], [2, 1], [2, 2], [2, 3], [2, 4]]\n        ],\n        [\n            [[1, 1], [1, 2], [1, 3], [2, 3]],\n            [[0, 2], [0, 3], [0, 4], [1, 4], [2, 4]],\n            [[0, 1], [0, 0], [1, 0], [2, 0], [2, 1], [2, 2]]\n        ],\n        [\n            [[0, 4], [0, 3], [0, 2], [0, 1], [1, 1], [1, 2], [1, 3]],\n            [[0, 0], [1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [1, 4]]\n        ],\n        [\n            [[0, 1], [0, 2], [0, 3]],\n            [[0, 0], [1, 0], [1, 1], [1, 2], [1, 3]],\n            [[0, 4], [1, 4], [2, 4], [2, 3], [2, 2], [2, 1], [2, 0]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0], [2, 1], [1, 1], [1, 2], [1, 3]],\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [2, 3], [2, 2]]\n        ],\n        [\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4]],\n            [[0, 0], [1, 0], [1, 1], [1, 2], [1, 3], [2, 3], [2, 2], [2, 1], [2, 0]]\n        ]\n    ],\n    '3x6':[\n        [\n            [[2, 3], [2, 4], [2, 5]],\n            [[2, 0], [2, 1], [2, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]],\n            [[0, 5], [1, 5], [1, 4], [1, 3], [1, 2], [1, 1], [1, 0]]\n        ],\n        [\n            [[1, 3], [1, 4], [2, 4], [2, 3]],\n            [[1, 1], [1, 0], [2, 0], [2, 1]],\n            [[0, 0], [0, 1], [0, 2], [1, 2], [2, 2]],\n            [[0, 3], [0, 4], [0, 5], [1, 5], [2, 5]]\n        ],\n        [\n            [[1, 0], [2, 0], [2, 1], [2, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4]],\n            [[1, 1], [1, 2], [1, 3], [2, 3], [2, 4], [2, 5], [1, 5], [0, 5]]\n        ],\n        [\n            [[0, 4], [0, 3], [1, 3], [1, 4]],\n            [[0, 0], [1, 0], [1, 1], [2, 1], [2, 0]],\n            [[0, 1], [0, 2], [1, 2], [2, 2], [2, 3], [2, 4], [2, 5], [1, 5], [0, 5]]\n        ],\n        [\n            [[2, 1], [2, 2], [2, 3]],\n            [[0, 4], [0, 5], [1, 5]],\n            [[2, 0], [1, 0], [1, 1], [1, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [1, 4], [2, 4], [2, 5]]\n        ],\n        [\n            [[0, 0], [1, 0], [1, 1], [2, 1], [2, 0]],\n            [[0, 3], [1, 3], [1, 4], [0, 4], [0, 5], [1, 5]],\n            [[0, 1], [0, 2], [1, 2], [2, 2], [2, 3], [2, 4], [2, 5]]\n        ],\n        [\n            [[0, 0], [0, 1], [0, 2]],\n            [[2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [1, 5], [1, 4]],\n            [[2, 0], [1, 0], [1, 1], [1, 2], [1, 3], [0, 3], [0, 4], [0, 5]]\n        ],\n        [\n            [[0, 1], [1, 1], [1, 2], [0, 2]],\n            [[0, 4], [1, 4], [2, 4], [2, 5], [1, 5], [0, 5]],\n            [[0, 0], [1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [1, 3], [0, 3]]\n        ],\n    ],\n    '4x4': [\n        [\n            [[0, 0], [0, 1], [0, 2], [0, 3]],\n            [[3, 0], [2, 0], [2, 1], [2, 2]],\n            [[1, 0], [1, 1], [1, 2], [1, 3], [2, 3], [3, 3], [3, 2], [3, 1]]\n        ],\n        [\n            [[1, 0], [1, 1], [1, 2]],\n            [[2, 2], [2, 1], [2, 0], [3, 0], [3, 1], [3, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [3, 3]]\n        ],\n        [\n            [[1, 0], [1, 1], [1, 2], [2, 2]],\n            [[2, 1], [2, 0], [3, 0], [3, 1], [3, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [3, 3]]\n        ],\n        [\n            [[1, 2], [1, 1], [2, 1], [2, 2]],\n            [[0, 1], [0, 0], [1, 0], [2, 0], [3, 0]],\n            [[0, 2], [0, 3], [1, 3], [2, 3], [3, 3], [3, 2], [3, 1]]\n        ],\n        [\n            [[0, 0], [1, 0], [1, 1]],\n            [[0, 1], [0, 2], [1, 2], [2, 2], [2, 1], [2, 0]],\n            [[0, 3], [1, 3], [2, 3], [3, 3], [3, 2], [3, 1], [3, 0]]\n        ],\n        [\n            [[1, 0], [1, 1], [2, 1]],\n            [[0, 0], [0, 1], [0, 2], [1, 2], [2, 2]],\n            [[2, 0], [3, 0], [3, 1], [3, 2], [3, 3], [2, 3], [1, 3], [0, 3]]\n        ],\n    ],\n    '4x5': [\n        [\n            [[2, 2], [2, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n            [[3, 1], [2, 1], [1, 1], [1, 2], [1, 3], [1, 4], [0, 4]],\n            [[0, 3], [0, 2], [0, 1], [0, 0], [1, 0], [2, 0], [3, 0]]\n        ],\n        [\n            [[3, 0], [3, 1], [3, 2], [3, 3], [3, 4]],\n            [[1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [1, 3], [1, 2], [1, 1]]\n        ],\n        [\n            [[3, 4], [2, 4], [1, 4], [0, 4], [0, 3], [1, 3]],\n            [[0, 0], [1, 0], [2, 0], [2, 1], [1, 1], [0, 1], [0, 2]],\n            [[3, 0], [3, 1], [3, 2], [3, 3], [2, 3], [2, 2], [1, 2]]\n        ],\n        [\n            [[2, 0], [3, 0], [3, 1], [3, 2], [3, 3]],\n            [[1, 0], [1, 1], [1, 2], [1, 3], [2, 3], [2, 2], [2, 1]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n        ],\n        [\n            [[3, 3], [3, 2], [3, 1], [3, 0], [2, 0], [2, 1]],\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [3, 4]],\n            [[0, 0], [1, 0], [1, 1], [1, 2], [1, 3], [2, 3], [2, 2]]\n        ],\n        [\n            [[3, 2], [3, 3], [3, 4], [2, 4], [1, 4], [0, 4]],\n            [[2, 0], [3, 0], [3, 1], [2, 1], [1, 1], [1, 0], [0, 0]],\n            [[0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [2, 2], [1, 2]]\n        ]\n    ],\n    '4x6':[\n        [\n            [[0, 2], [0, 3], [0, 4], [0, 5]],\n            [[1, 5], [2, 5], [3, 5], [3, 4], [3, 3]],\n            [[3, 2], [3, 1], [2, 1], [2, 2], [2, 3], [2, 4]],\n            [[3, 0], [2, 0], [1, 0], [0, 0], [0, 1], [1, 1], [1, 2], [1, 3], [1, 4]]\n        ],\n        [\n            [[2, 0], [3, 0], [3, 1], [3, 2]],\n            [[1, 0], [1, 1], [2, 1], [2, 2], [2, 3]],\n            [[0, 3], [0, 4], [0, 5], [1, 5], [2, 5], [3, 5]],\n            [[0, 0], [0, 1], [0, 2], [1, 2], [1, 3], [1, 4], [2, 4], [3, 4], [3, 3]]\n        ],\n        [\n            [[1, 2], [2, 2], [2, 3], [1, 3]],\n            [[0, 5], [1, 5], [2, 5], [3, 5]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [3, 4]],\n            [[1, 0], [1, 1], [2, 1], [2, 0], [3, 0], [3, 1], [3, 2], [3, 3]]\n        ],\n        [\n            [[0, 3], [0, 4], [0, 5], [1, 5]],\n            [[2, 0], [3, 0], [3, 1], [3, 2]],\n            [[0, 0], [0, 1], [0, 2], [1, 2], [1, 3], [1, 4], [2, 4], [2, 5]],\n            [[1, 0], [1, 1], [2, 1], [2, 2], [2, 3], [3, 3], [3, 4], [3, 5]]\n        ],\n        [\n            [[0, 2], [0, 3], [0, 4]],\n            [[1, 0], [2, 0], [3, 0], [3, 1], [3, 2], [3, 3]],\n            [[2, 1], [2, 2], [2, 3], [2, 4], [3, 4], [3, 5], [2, 5]],\n            [[0, 0], [0, 1], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [0, 5]]\n        ],\n        [\n            [[0, 5], [1, 5], [2, 5], [3, 5]],\n            [[0, 0], [1, 0], [1, 1], [1, 2], [1, 3]],\n            [[2, 0], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4]],\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [2, 3], [2, 2], [2, 1]]\n        ],\n        [\n            [[3, 1], [3, 2], [3, 3]],\n            [[2, 1], [2, 2], [2, 3], [2, 4], [3, 4]],\n            [[3, 0], [2, 0], [1, 0], [0, 0], [0, 1], [0, 2], [0, 3]],\n            [[1, 1], [1, 2], [1, 3], [1, 4], [0, 4], [0, 5], [1, 5], [2, 5], [3, 5]]\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0], [2, 1], [3, 1], [3, 0]],\n            [[0, 2], [0, 3], [1, 3], [2, 3], [2, 4], [1, 4], [1, 5], [0, 5], [0, 4]],\n            [[0, 1], [1, 1], [1, 2], [2, 2], [3, 2], [3, 3], [3, 4], [3, 5], [2, 5]]\n        ]\n    ],\n    '5x5': [\n        [\n            [[4, 1], [4, 0], [3, 0], [3, 1], [3, 2]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]],\n            [[1, 1], [1, 2], [1, 3], [1, 4], [2, 4], [3, 4], [4, 4]],\n            [[1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [3, 3], [4, 3], [4, 2]]\n        ],\n        [\n            [[4, 0], [4, 1], [4, 2], [3, 2]],\n            [[1, 1], [1, 2], [1, 3], [1, 4], [2, 4]],\n            [[2, 0], [1, 0], [0, 0], [0, 1], [0, 2], [0, 3], [0, 4]],\n            [[3, 0], [3, 1], [2, 1], [2, 2], [2, 3], [3, 3], [4, 3], [4, 4], [3, 4]]\n        ],\n        [\n            [[1, 0], [1, 1], [2, 1]],\n            [[2, 0], [3, 0], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4]],\n            [[3, 1], [3, 2], [3, 3], [3, 4], [2, 4], [1, 4], [0, 4]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [2, 2], [1, 2]],\n        ],\n        [\n            [[3, 1], [3, 2], [2, 2], [1, 2], [0, 2]],\n            [[4, 0], [4, 1], [4, 2], [4, 3], [3, 3], [2, 3]],\n            [[3, 0], [2, 0], [2, 1], [1, 1], [0, 1], [0, 0], [1, 0]],\n            [[1, 3], [0, 3], [0, 4], [1, 4], [2, 4], [3, 4], [4, 4]]\n        ],\n        [\n            [[4, 4], [3, 4], [3, 3], [3, 2], [3, 1]],\n            [[2, 0], [3, 0], [4, 0], [4, 1], [4, 2], [4, 3]],\n            [[1, 1], [1, 0], [0, 0], [0, 1], [0, 2], [0, 3], [0, 4]],\n            [[1, 2], [1, 3], [1, 4], [2, 4], [2, 3], [2, 2], [2, 1]]\n        ],\n        [\n            [[0, 1], [1, 1], [1, 2], [0, 2]],\n            [[0, 0], [1, 0], [2, 0], [3, 0], [3, 1], [4, 1], [4, 0]],\n            [[2, 1], [2, 2], [3, 2], [3, 3], [2, 3], [1, 3], [0, 3]],\n            [[4, 2], [4, 3], [4, 4], [3, 4], [2, 4], [1, 4], [0, 4]]\n        ],\n        [\n            [[0, 4], [1, 4], [2, 4], [3, 4], [4, 4]],\n            [[4, 0], [4, 1], [4, 2], [4, 3], [3, 3], [2, 3]],\n            [[0, 0], [1, 0], [1, 1], [2, 1], [2, 0], [3, 0], [3, 1]],\n            [[0, 1], [0, 2], [0, 3], [1, 3], [1, 2], [2, 2], [3, 2]],\n        ],\n        [\n            [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0]],\n            [[1, 2], [1, 1], [2, 1], [3, 1], [3, 2], [3, 3]],\n            [[4, 1], [4, 2], [4, 3], [4, 4], [3, 4], [2, 4]],\n            [[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [1, 3], [2, 3], [2, 2]]\n        ],\n        [\n            [[1, 0], [2, 0], [3, 0], [3, 1], [2, 1], [2, 2]],\n            [[1, 1], [1, 2], [1, 3], [2, 3], [3, 3], [3, 2]],\n            [[4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [3, 4]],\n            [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4]]\n        ]\n    ]\n}","import { wordsBase } from \"./wordsBase\";\nimport { patterns } from \"./patterns\";\n\n\nfunction getFlipPattern(width){\n    let pattern = [];\n    let rawPattern = patterns[width+'x'+width][Math.floor(Math.random()*patterns[width+'x'+width].length)];\n    // let rawPattern = patterns[width+'x'+width][1];\n    // для тестирования шаблонов\n    let patCase = Math.floor(Math.random()*4);\n    rawPattern.forEach(word => {\n        pattern[pattern.length] = [];\n        let patternWord =  pattern[pattern.length - 1];\n        word.forEach(symbol => {\n            switch(patCase){\n                case 0:\n                    patternWord[patternWord.length] = [symbol[0], symbol[1]];\n                    break;\n                case 1:\n                    patternWord[patternWord.length] = [width - 1 - symbol[0], width - 1 - symbol[1]];\n                    break;\n                case 2:\n                    patternWord[patternWord.length] = [width - 1 - symbol[1], symbol[0]];\n                    break;\n                case 3:\n                    patternWord[patternWord.length] = [symbol[1], width - 1 - symbol[0]];\n                    break;\n                default:\n                    break;\n            }\n        });\n    });\n    \n    return pattern;\n}\n\nfunction getFlipNoSquarePattern(shortside, tallside, fallOnSide = false){\n    let pattern = [];\n    let rawPattern = patterns[shortside+'x'+tallside][Math.floor(Math.random()*patterns[shortside+'x'+tallside].length)];\n    let patCase = Math.floor(Math.random()*4);\n    rawPattern.forEach(word => {\n        pattern[pattern.length] = [];\n        let patternWord =  pattern[pattern.length - 1];\n        word.forEach(symbol => {\n            switch(patCase){\n                case 0:\n                    patternWord[patternWord.length] = [symbol[0], symbol[1]];\n                    break;\n                case 1:\n                    patternWord[patternWord.length] = [shortside - 1 - symbol[0], tallside - 1 - symbol[1]];\n                    break;\n                case 2:\n                    patternWord[patternWord.length] = [shortside - 1 - symbol[0], symbol[1]];\n                    break;\n                case 3:\n                    patternWord[patternWord.length] = [symbol[0], tallside - 1 - symbol[1]];\n                    break;\n                default:\n                    break;\n            }\n        });\n    });\n\n    if(fallOnSide){\n        pattern.forEach(word => {\n            word.forEach(symbol => {\n                let temp = symbol[0];\n                symbol[0] = symbol[1];\n                symbol[1] = shortside - 1 - temp;\n            });\n        });\n    }\n    \n    return pattern;\n}\n\n\nfunction getSixPattern(){\n    let pattern = getFlipPattern(3);\n    let rawPattern = getFlipPattern(3);\n\n    for(let i = 1; i < 4; i++){\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => {\n                switch(i){\n                    case 1:\n                        patternWord[patternWord.length] = [symbol[0], symbol[1]+3];\n                        break;\n                    case 2:\n                        patternWord[patternWord.length] = [symbol[0]+3, symbol[1]];\n                        break;\n                    case 3:\n                        patternWord[patternWord.length] = [symbol[0]+3, symbol[1]+3];\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n        rawPattern = getFlipPattern(3);\n    }\n\n    return pattern;\n}\n\nfunction getSevenPattern(){\n    // Выбираем шаблон 4 на 4 в качестве верхнего левого угла.\n    let pattern = getFlipPattern(4);\n    // Пришиваем шаблон 3 на 3 в качетсве правого нижнего угла.\n    let rawPattern = getFlipPattern(3);\n    rawPattern.forEach(word => {\n        pattern[pattern.length] = [];\n        let patternWord =  pattern[pattern.length - 1];\n        word.forEach(symbol => {\n            patternWord[patternWord.length] = [symbol[0]+4, symbol[1]+4];\n        });\n    });\n    // Пришиваем шаблон 3 на 4 в качестве левого нижнего угла.\n    rawPattern = getFlipNoSquarePattern(3, 4);\n    rawPattern.forEach(word => {\n        pattern[pattern.length] = [];\n        let patternWord =  pattern[pattern.length - 1];\n        word.forEach(symbol => patternWord[patternWord.length] = [symbol[0]+4, symbol[1]]);\n    });\n    // Пришиваем шаблон 4 на 3 в качестве правого верхнего угла.\n    rawPattern = getFlipNoSquarePattern(3, 4, true);\n    rawPattern.forEach(word => {\n        pattern[pattern.length] = [];\n        let patternWord =  pattern[pattern.length - 1];\n        word.forEach(symbol => patternWord[patternWord.length] = [symbol[0], symbol[1]+4]);\n    });\n\n    return pattern;\n}\n\nfunction getEightPattern(){\n    let pattern = [];\n    // Выбираем одну из схем\n    if(Math.floor(Math.random()*4) > 1){\n        // Схема 2х2 из шаблонов 4х4\n        pattern = getFlipPattern(4);\n        let rawPattern = getFlipPattern(4);\n\n        for(let i = 1; i < 4; i++){\n            rawPattern.forEach(word => {\n                pattern[pattern.length] = [];\n                let patternWord =  pattern[pattern.length - 1];\n                word.forEach(symbol => {\n                    switch(i){\n                        case 1:\n                            patternWord[patternWord.length] = [symbol[0], symbol[1]+4];\n                            break;\n                        case 2:\n                            patternWord[patternWord.length] = [symbol[0]+4, symbol[1]];\n                            break;\n                        case 3:\n                            patternWord[patternWord.length] = [symbol[0]+4, symbol[1]+4];\n                            break;\n                        default:\n                            break;\n                    }\n                });\n            });\n            rawPattern = getFlipPattern(4);\n        }\n\n    } else {\n        // Схема из шаблонов 5х5, 5х3, 3х5, 3х3\n        // Выбираем шаблон 5 на 5 в качестве верхнего левого угла.\n        pattern = getFlipPattern(5);\n        // Пришиваем шаблон 3 на 3 в качетсве правого нижнего угла.\n        let rawPattern = getFlipPattern(3);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => {\n                patternWord[patternWord.length] = [symbol[0]+5, symbol[1]+5];\n            });\n        });\n        // Пришиваем шаблон 3 на 5 в качестве левого нижнего угла.\n        rawPattern = getFlipNoSquarePattern(3, 5);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0]+5, symbol[1]]);\n        });\n        // Пришиваем шаблон 5 на 3 в качестве правого верхнего угла.\n        rawPattern = getFlipNoSquarePattern(3, 5, true);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0], symbol[1]+5]);\n        });\n    }\n\n\n    return pattern;\n}\n\nfunction getNinePattern(){\n    let pattern = [];\n    // Выбираем одну из схем\n    if(Math.floor(Math.random()*4) > 1){\n        // Схема из шаблонов 6x6, 3x3, 6x3, 3x6\n        // Выбираем шаблон 6 на 6 в качестве верхнего левого угла.\n        pattern = getSixPattern(6);\n        // Пришиваем шаблон 3 на 3 в качетсве правого нижнего угла.\n        let rawPattern = getFlipPattern(3);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => {\n                patternWord[patternWord.length] = [symbol[0]+6, symbol[1]+6];\n            });\n        });\n        // Пришиваем шаблон 3 на 6 в качестве левого нижнего угла.\n        rawPattern = getFlipNoSquarePattern(3, 6);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0]+6, symbol[1]]);\n        });\n        // Пришиваем шаблон 6 на 3 в качестве правого верхнего угла.\n        rawPattern = getFlipNoSquarePattern(3, 6, true);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0], symbol[1]+6]);\n        });\n\n    } else {\n        // Схема из шаблонов 5х5, 5х4, 4х5, 4х4\n        // Выбираем шаблон 5 на 5 в качестве верхнего левого угла.\n        pattern = getFlipPattern(5);\n        // Пришиваем шаблон 4 на 4 в качетсве правого нижнего угла.\n        let rawPattern = getFlipPattern(4);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => {\n                patternWord[patternWord.length] = [symbol[0]+5, symbol[1]+5];\n            });\n        });\n        // Пришиваем шаблон 4 на 5 в качестве левого нижнего угла.\n        rawPattern = getFlipNoSquarePattern(4, 5);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0]+5, symbol[1]]);\n        });\n        // Пришиваем шаблон 5 на 4 в качестве правого верхнего угла.\n        rawPattern = getFlipNoSquarePattern(4, 5, true);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0], symbol[1]+5]);\n        });\n    }\n\n\n    return pattern;\n}\n\nfunction getTenPattern(){\n    let pattern = [];\n    // Выбираем одну из схем\n    if(Math.floor(Math.random()*4) > 1){\n        // Схема из шаблонов 6x6, 4x4, 6x4, 4x6\n        // Выбираем шаблон 6 на 6 в качестве верхнего левого угла.\n        pattern = getSixPattern(6);\n        // Пришиваем шаблон 4 на 4 в качетсве правого нижнего угла.\n        let rawPattern = getFlipPattern(4);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => {\n                patternWord[patternWord.length] = [symbol[0]+6, symbol[1]+6];\n            });\n        });\n        // Пришиваем шаблон 4 на 6 в качестве левого нижнего угла.\n        rawPattern = getFlipNoSquarePattern(4, 6);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0]+6, symbol[1]]);\n        });\n        // Пришиваем шаблон 6 на 4 в качестве правого верхнего угла.\n        rawPattern = getFlipNoSquarePattern(4, 6, true);\n        rawPattern.forEach(word => {\n            pattern[pattern.length] = [];\n            let patternWord =  pattern[pattern.length - 1];\n            word.forEach(symbol => patternWord[patternWord.length] = [symbol[0], symbol[1]+6]);\n        });\n    } else {\n         // Схема 2х2 из шаблонов 5х5\n         pattern = getFlipPattern(5);\n         let rawPattern = getFlipPattern(5);\n \n         for(let i = 1; i < 4; i++){\n             rawPattern.forEach(word => {\n                 pattern[pattern.length] = [];\n                 let patternWord =  pattern[pattern.length - 1];\n                 word.forEach(symbol => {\n                     switch(i){\n                         case 1:\n                             patternWord[patternWord.length] = [symbol[0], symbol[1]+5];\n                             break;\n                         case 2:\n                             patternWord[patternWord.length] = [symbol[0]+5, symbol[1]];\n                             break;\n                         case 3:\n                             patternWord[patternWord.length] = [symbol[0]+5, symbol[1]+5];\n                             break;\n                         default:\n                             break;\n                     }\n                 });\n             });\n             rawPattern = getFlipPattern(5);\n         }\n    }\n\n\n    return pattern;\n}\n\nfunction getPattern(width) {\n    switch(width){\n        case 3:\n            return getFlipPattern(3); \n        case 4: \n            return getFlipPattern(4); \n        case 5:\n            return getFlipPattern(5);\n        case 6:\n            return getSixPattern();\n        case 7:\n            return getSevenPattern();\n        case 8:\n            return getEightPattern();\n        case 9:\n            return getNinePattern();\n        case 10:\n            return getTenPattern();\n    }\n}\n\nexport const makeMapAndPattern = width => {\n    let pattern = getPattern(width);\n\n    // Переворачиваем некоторые слова\n    for(let i = 0; i < pattern.length; i++){\n        if(Math.random() > 0.5){\n            let wordRev = [];\n            for(let j = 0; j < pattern[i].length; j++){\n                wordRev.unshift(pattern[i][j]);\n            }\n            pattern[i] = wordRev;\n        }\n    }\n\n    let map = [];\n\n    for(let i = 0; i < width; i++){\n        map[i] = [];\n        for(let j = 0; j < width; j++){\n            map[i][j] = 1;\n        }\n    }\n\n    pattern.forEach(word => {\n        let wordLenghtInBase = word.length - 3;\n        let wordFromBase = wordsBase[wordLenghtInBase][Math.floor(Math.random()*wordsBase[wordLenghtInBase].length)];\n        for(let index = 0; index < word.length; index++){\n            map[word[index][0]][word[index][1]]= {\n                letter: `${wordFromBase[index]}`, \n                color: '#fff', \n                dead: false\n            };\n        }\n    });\n\n    return { \n        'map': map, \n        'pattern': pattern \n    };\n}","import { render } from \"./App.vue?vue&type=template&id=de0e8a76\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=de0e8a76&lang=css\"\n\nimport exportComponent from \"/home/usr-vlad/Documents/Портфолио/Филворды/fillwords/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}